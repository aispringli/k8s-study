apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: aispring
  name: resource
  labels: 
    app: resource
spec: 
  replicas: 1
  selector: 
    matchLabels: 
      app: resource
  template: 
    metadata: 
      labels: 
        app: resource
    spec: 
      containers:
        - name: resource
          image: nginx
          imagePullPolicy: IfNotPresent
          env: 
            - name: TZ
              value: Asia/Shanghai
          ports: 
            - name: http
              containerPort: 80
          livenessProbe: 
            httpGet: 
              path: /
              port: 80
            initialDelaySeconds: 180
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            timeoutSeconds: 1
          volumeMounts:
            - name: resource-data
              mountPath: /usr/share/nginx/html
      volumes:
        - name: resource-data
          hostPath:
            path: /out_data/k8s/resource/public
---
## Service
apiVersion: v1
kind: Service
metadata:
  name: resource
  namespace: aispring
  labels:
    app: resource
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 80
  selector:
    app: resource
# web
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: resource
  namespace: aispring
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization'
    nginx.ingress.kubernetes.io/cors-allow-methods: 'PUT, GET, POST, OPTIONS'
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    nginx.ingress.kubernetes.io/enable-cors: 'true'
spec:
  tls:
    - hosts:
        - resource.local.aispring.cloud
        - "*.local.aispring.cloud"
      secretName: local-aispring-https-certs
  rules:
    - host: resource.local.aispring.cloud
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service: 
                name: resource
                port: 
                  name: http