apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube
  namespace: aispring
  labels:
    app: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      containers:
        - name: sonarqube
          image: sonarqube
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: Asia/Shanghai
            - name: SONARQUBE_JDBC_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: sonarqube-config
                  key: jdbc-username
            - name: SONARQUBE_JDBC_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: sonarqube-config
                  key: jdbc-password
            - name: SONARQUBE_JDBC_URL
              valueFrom:
                configMapKeyRef:
                  name: sonarqube-config
                  key: jdbc-url
          ports:
          - containerPort: 9000
            name: http
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /sessions/new
              port: 9000
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /sessions/new
              port: 9000
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 6
          volumeMounts:
            - mountPath: /opt/sonarqube/conf
              name: sonarqube-data
              subPath: conf
            - mountPath: /opt/sonarqube/data
              name: sonarqube-data
              subPath: data
            - mountPath: /opt/sonarqube/extensions
              name: sonarqube-data
              subPath: extensions
      initContainers:
        - name: init-sysctl
          image: busybox
          imagePullPolicy: IfNotPresent
          command: ["sysctl", "-w", "vm.max_map_count=262144"]
          securityContext:
            privileged: true
      volumes:
        - name: sonarqube-data
          hostPath:
            path: /out_data/k8s/sonarqube/data
        - name: sonarqube-config
          configMap:
            name: sonarqube-config