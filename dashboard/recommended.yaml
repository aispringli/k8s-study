# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Namespace
metadata:
  name: kubernetes-dashboard

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard

---
kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
spec:
  type: NodePort
  ports:
    - port: 443
      targetPort: 8443
      nodePort: 31443
  selector:
    k8s-app: kubernetes-dashboard

---
# apiVersion: v1
# kind: Secret
# metadata:
#   labels:
#     k8s-app: kubernetes-dashboard
#   name: kubernetes-dashboard-certs
#   namespace: kubernetes-dashboard
# type: Opaque

# ---
apiVersion: v1
kind: Secret
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard-certs
  namespace: kubernetes-dashboard
data:
  dashboard.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeFM1VGNhUHltQmFkNk13cmVVcmdmY1d2bmNIMXpYKys0L3Y4TkR2N2lNbFByS2FYCnYxenFIMlVUWFdGeWFBOE9aWjduRitwemRGTFBVQ0ttOUpUTmFPWTU0ckJJYkZJL1YrMWdyRzlUQlA2TkxDa3gKWmhKSUY1S2RSUnExa0tFU3JxMXp4M3hXYk9VMFJGUWtIbDZueEZNbkhtVENjMWpkcTNVNEVIYWJBK1JiUkZzZQpDTk50K0dub3JpQ01wYmM2QUk4bDJGU1A5Vk5lRWlXT0NLb2ZVaTIrYWdpM2Z5bzM0MTlYYjhXc2pUSW1nTTlXCmhMTWQrZ0krV3BEMWpkbEp6aSt0STBvZzhQVXlYYnhWNklzT3N1SlpzQ2U5WjNJSjBtRDUzU0FFd2VyVk5xUkcKZXFNNTF1NXZqVGsxUTFIMTk5SGcwdVpsNDVTR3lncnpPbGNVdVFJREFRQUJBb0lCQURJM0ZBVVN6WXN4NTFFTAovZDVMMVZQeWJrRHN6bDVoTkFuM2VFa05KWWUyVE5ZWkx2Z0svNHl6UHZVL0JkVytUOXBOVjJqZHlqMUxnWVJVCjd0UEd1WEVIZ0tKY1puVS9sT1lkaThzZUpyUlU1enJoMnJTMTN5b3hxbCtZNTdoSGJPeVRPN01IMVRLeVJGZEsKWGxCbHBxLzJ4VFdXVDNiMG9LOHprTzJRWnZYY1ZSUFN5Nm80b1pzemdhcCtxYVF1Vi9vYktlOWVmTFUwT09SNgpmOE82cy9VZ0xRMEk0NU1sRkRmRnNyTzBmb3FubEtmWVR5bFBCZXowWXdORkJMVTJuaUNaN1lMaFdLNDN0cWJIClNjNWhTYnUvaUE5QXlkajZIdnhFazdyZ2pwcFRaNEhzMXVpbkM2SWVkVHN4T2plM2c0M2o1eTl4OXltK1hvY3kKMk42QmhBRUNnWUVBOUVtT2dOYlhneDZ4YUxSNHM5czhCZ0lPMUNrVm1sTEMwYnFBS3RvdlpMTjBacC9LSExlaQpHMkxSRWVrdFJkdWwydmNEUElxbUxzMDJvODczbHNnOUxNbUNYOGl4dENkNFR1ZWxnZW1SOGhGZjNnT0tSZ1FXCnU4bWNRTlNqTDlxTk9LMUhpUXpKbUJ4b2dsaW5ZSnlWOGRmZnkvTnFIZUExVDNPRUJVdkYvUGtDZ1lFQXpxS1MKOHZQam43RzdQMTZNSkxRbUNvcmtnbnZMUm5GdnVPZkdzdkE2ZnZ5SVNhRWJpQWtFWk5OYXVoTzQyb3NMNURvTgpoU3NSMHR4RFplaWtZalJGdE1vazhPRi8rMmxQS3BnRTE2YlNOaXRDek96K1JDazVZR2RpR0ptOU16amYzbWtWCnJkcGJCZTdEeUErUTYxNVhPUFcyTHZWZkNXZmdpK1A5RU5KV2hjRUNnWUFNZFF2TlNpZG5TbE5sc1g1T1BhbkwKN0tMdzhyOWxSVDhtRHNxbVpNWHg3cXpLNXU4Wms4dXlkZEdQaGtLR3czS3J2ZGp1WjJ1ZUMxeno4WVB5cm5kZwpKMDU4ci9GUDdJdFlDcndINmU5RlZ0bDZxdGVNUm4wYVNtZXJicXg3cmp0eFhuUzlhbWVGV0QyRUdCMUE4ZnM3CmYvU3JvOWdQZWZWOS9iZ0h4UnR0a1FLQmdRQ0tIS2ZUczZnRTZTcWFwSHRQWFFuQUtpMnArVXhZL1NFTG1mOTUKUXBBV3FIdi9tcXRvTlg2MlZYNWl1U1BwRHQ4WDRLV0F5TlRVOTF3bEZXWXFMWDRaNUxMa1BoVG8yZTZNTGFldQo3Rlc4MXhXREd6U29JbFd6VmVaL1F1THZCYWk4WThpVnQwajNvaXRCNFFXZ0RDS0ljOU1kZCt2WndaQ1liLzZKCjY4emhBUUtCZ0VCVHBWWUJVSWdjK2hCVXhlTERpTlR2NVZhWjdTN0MybGhDYnBSZ1VHYjhXeXhuSnRTckNQWksKb3RxblRXQXdDcEFHWmNqMno3RU5PMXF5cms5b2Vjc3dFZkpqcEh3MmZ3ckRHcFhUUGhYQ2ErS0JjVk9lYTdqawpURVdodGFwWHp0WEFaS2pqTG1hK0N2SHpaZXJRMjQzckJOUGpxVTJhKzY1d1h6T1c2QXpRCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  dashboard.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZPRENDQkNDZ0F3SUJBZ0lTQkxXeDdTTkJMc0FtOHR3aUJqQ05SVWE4TUEwR0NTcUdTSWIzRFFFQkN3VUEKTURJeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1Rc3dDUVlEVlFRRApFd0pTTXpBZUZ3MHlNVEEwTWpReE1EQTFORE5hRncweU1UQTNNak14TURBMU5ETmFNQnN4R1RBWEJnTlZCQU1NCkVDb3VZV2x6Y0hKcGJtY3VZMnh2ZFdRd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUIKQVFERkxsTnhvL0tZRnAzb3pDdDVTdUI5eGErZHdmWE5mNzdqKy93ME8vdUl5VStzcHBlL1hPb2ZaUk5kWVhKbwpEdzVsbnVjWDZuTjBVczlRSXFiMGxNMW81am5pc0Voc1VqOVg3V0NzYjFNRS9vMHNLVEZtRWtnWGtwMUZHcldRCm9SS3VyWFBIZkZaczVUUkVWQ1FlWHFmRVV5Y2VaTUp6V04ycmRUZ1FkcHNENUZ0RVd4NEkwMjM0YWVpdUlJeWwKdHpvQWp5WFlWSS8xVTE0U0pZNElxaDlTTGI1cUNMZC9LamZqWDFkdnhheU5NaWFBejFhRXN4MzZBajVha1BXTgoyVW5PTDYwalNpRHc5VEpkdkZYb2l3Nnk0bG13SjcxbmNnblNZUG5kSUFUQjZ0VTJwRVo2b3puVzdtK05PVFZEClVmWDMwZURTNW1YamxJYktDdk02VnhTNUFnTUJBQUdqZ2dKZE1JSUNXVEFPQmdOVkhROEJBZjhFQkFNQ0JhQXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRApWUjBPQkJZRUZJNmxHVklEM21RWEsxdzR0TkdOQ0RPbC9qZnJNQjhHQTFVZEl3UVlNQmFBRkJRdXN4ZTNXRmJMCnJsQUpRT1lmcjUyTEZNTEdNRlVHQ0NzR0FRVUZCd0VCQkVrd1J6QWhCZ2dyQmdFRkJRY3dBWVlWYUhSMGNEb3YKTDNJekxtOHViR1Z1WTNJdWIzSm5NQ0lHQ0NzR0FRVUZCekFDaGhab2RIUndPaTh2Y2pNdWFTNXNaVzVqY2k1dgpjbWN2TUNzR0ExVWRFUVFrTUNLQ0VDb3VZV2x6Y0hKcGJtY3VZMnh2ZFdTQ0RtRnBjM0J5YVc1bkxtTnNiM1ZrCk1Fd0dBMVVkSUFSRk1FTXdDQVlHWjRFTUFRSUJNRGNHQ3lzR0FRUUJndDhUQVFFQk1DZ3dKZ1lJS3dZQkJRVUgKQWdFV0dtaDBkSEE2THk5amNITXViR1YwYzJWdVkzSjVjSFF1YjNKbk1JSUJCZ1lLS3dZQkJBSFdlUUlFQWdTQgo5d1NCOUFEeUFIY0FSSlJsTHJEdXpxL0VRQWZZcVA0b3dOcm1ncjdZeXpHMVA5TXpsclcyZ2FnQUFBRjVBNDZJClh3QUFCQU1BU0RCR0FpRUEycHZjMXBsTytaUFVFc1UvT05UbWlCcU5qVjdqMUpJR2ZQcVJYbmEwR2ZFQ0lRQ1IKNmY5NWFMNFh4bURCS3hnb1E0amNMVTNtbVhnZ05CMmhyQXdyNi8zQWpBQjNBUFpjbEMvUmR6QWlGRlFZQ0RDVQpWbzdqVFJNWk03L2ZEQzhnQzh4TzhXVGpBQUFCZVFPT2lFNEFBQVFEQUVnd1JnSWhBS2IvcUdNeHpxdHJ1YkEvClExNExlVHNuSkZPRkVIdExjc0M1WVJSdEVWKzlBaUVBbUhUUnZpTUxCb3pjVTJNanM4UFFyZjdMeklOUDFrQTIKRzYyVVUvU2ZNQ1F3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUljTHZ0NjRNUW5JZlNSUmtFbWZtcy8rZ3RDMQp2eFloaUFMMTRqWFd6aG1nTksreHBpWEt6ZGtZL0tqbFQ5dVg4alZDaVFrNnZHc0paazJuZHVZQXJVU2k0MGtiCmVqSjBKTm0zbDBpUG1qNUx5M3BzbWtrcm5sbHlTLzVFTVA4clY1MDdQWS9lcGhXQzVZQ3JlV1J3WURWdjZPWDYKZjNjTGxQV1cyWnFUNGlQN3JrQmJYSWJBdXlaMXl0eXhLTy9RRDRacDMyMEYwb2Q4YWVkTzMwdzUyb3IwNHFwTgppTWRxcm43eWZ2MUtPa1hIVnVFRW1MMkRqUWF3cHhyYXVqcHBPWDI2OWhGTnFBckFCSkJMZ2VnVmo3VzRSVlV1Ci94VmJaS0E2STYwdU5VMFZuc1VLT3E3d1BYREk4STNuZTFYV1RRSmJjc0MwVmJWeklqUE9FOFlkSjRNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeFM1VGNhUHltQmFkNk13cmVVcmdmY1d2bmNIMXpYKys0L3Y4TkR2N2lNbFByS2FYCnYxenFIMlVUWFdGeWFBOE9aWjduRitwemRGTFBVQ0ttOUpUTmFPWTU0ckJJYkZJL1YrMWdyRzlUQlA2TkxDa3gKWmhKSUY1S2RSUnExa0tFU3JxMXp4M3hXYk9VMFJGUWtIbDZueEZNbkhtVENjMWpkcTNVNEVIYWJBK1JiUkZzZQpDTk50K0dub3JpQ01wYmM2QUk4bDJGU1A5Vk5lRWlXT0NLb2ZVaTIrYWdpM2Z5bzM0MTlYYjhXc2pUSW1nTTlXCmhMTWQrZ0krV3BEMWpkbEp6aSt0STBvZzhQVXlYYnhWNklzT3N1SlpzQ2U5WjNJSjBtRDUzU0FFd2VyVk5xUkcKZXFNNTF1NXZqVGsxUTFIMTk5SGcwdVpsNDVTR3lncnpPbGNVdVFJREFRQUJBb0lCQURJM0ZBVVN6WXN4NTFFTAovZDVMMVZQeWJrRHN6bDVoTkFuM2VFa05KWWUyVE5ZWkx2Z0svNHl6UHZVL0JkVytUOXBOVjJqZHlqMUxnWVJVCjd0UEd1WEVIZ0tKY1puVS9sT1lkaThzZUpyUlU1enJoMnJTMTN5b3hxbCtZNTdoSGJPeVRPN01IMVRLeVJGZEsKWGxCbHBxLzJ4VFdXVDNiMG9LOHprTzJRWnZYY1ZSUFN5Nm80b1pzemdhcCtxYVF1Vi9vYktlOWVmTFUwT09SNgpmOE82cy9VZ0xRMEk0NU1sRkRmRnNyTzBmb3FubEtmWVR5bFBCZXowWXdORkJMVTJuaUNaN1lMaFdLNDN0cWJIClNjNWhTYnUvaUE5QXlkajZIdnhFazdyZ2pwcFRaNEhzMXVpbkM2SWVkVHN4T2plM2c0M2o1eTl4OXltK1hvY3kKMk42QmhBRUNnWUVBOUVtT2dOYlhneDZ4YUxSNHM5czhCZ0lPMUNrVm1sTEMwYnFBS3RvdlpMTjBacC9LSExlaQpHMkxSRWVrdFJkdWwydmNEUElxbUxzMDJvODczbHNnOUxNbUNYOGl4dENkNFR1ZWxnZW1SOGhGZjNnT0tSZ1FXCnU4bWNRTlNqTDlxTk9LMUhpUXpKbUJ4b2dsaW5ZSnlWOGRmZnkvTnFIZUExVDNPRUJVdkYvUGtDZ1lFQXpxS1MKOHZQam43RzdQMTZNSkxRbUNvcmtnbnZMUm5GdnVPZkdzdkE2ZnZ5SVNhRWJpQWtFWk5OYXVoTzQyb3NMNURvTgpoU3NSMHR4RFplaWtZalJGdE1vazhPRi8rMmxQS3BnRTE2YlNOaXRDek96K1JDazVZR2RpR0ptOU16amYzbWtWCnJkcGJCZTdEeUErUTYxNVhPUFcyTHZWZkNXZmdpK1A5RU5KV2hjRUNnWUFNZFF2TlNpZG5TbE5sc1g1T1BhbkwKN0tMdzhyOWxSVDhtRHNxbVpNWHg3cXpLNXU4Wms4dXlkZEdQaGtLR3czS3J2ZGp1WjJ1ZUMxeno4WVB5cm5kZwpKMDU4ci9GUDdJdFlDcndINmU5RlZ0bDZxdGVNUm4wYVNtZXJicXg3cmp0eFhuUzlhbWVGV0QyRUdCMUE4ZnM3CmYvU3JvOWdQZWZWOS9iZ0h4UnR0a1FLQmdRQ0tIS2ZUczZnRTZTcWFwSHRQWFFuQUtpMnArVXhZL1NFTG1mOTUKUXBBV3FIdi9tcXRvTlg2MlZYNWl1U1BwRHQ4WDRLV0F5TlRVOTF3bEZXWXFMWDRaNUxMa1BoVG8yZTZNTGFldQo3Rlc4MXhXREd6U29JbFd6VmVaL1F1THZCYWk4WThpVnQwajNvaXRCNFFXZ0RDS0ljOU1kZCt2WndaQ1liLzZKCjY4emhBUUtCZ0VCVHBWWUJVSWdjK2hCVXhlTERpTlR2NVZhWjdTN0MybGhDYnBSZ1VHYjhXeXhuSnRTckNQWksKb3RxblRXQXdDcEFHWmNqMno3RU5PMXF5cms5b2Vjc3dFZkpqcEh3MmZ3ckRHcFhUUGhYQ2ErS0JjVk9lYTdqawpURVdodGFwWHp0WEFaS2pqTG1hK0N2SHpaZXJRMjQzckJOUGpxVTJhKzY1d1h6T1c2QXpRCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZPRENDQkNDZ0F3SUJBZ0lTQkxXeDdTTkJMc0FtOHR3aUJqQ05SVWE4TUEwR0NTcUdTSWIzRFFFQkN3VUEKTURJeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1Rc3dDUVlEVlFRRApFd0pTTXpBZUZ3MHlNVEEwTWpReE1EQTFORE5hRncweU1UQTNNak14TURBMU5ETmFNQnN4R1RBWEJnTlZCQU1NCkVDb3VZV2x6Y0hKcGJtY3VZMnh2ZFdRd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUIKQVFERkxsTnhvL0tZRnAzb3pDdDVTdUI5eGErZHdmWE5mNzdqKy93ME8vdUl5VStzcHBlL1hPb2ZaUk5kWVhKbwpEdzVsbnVjWDZuTjBVczlRSXFiMGxNMW81am5pc0Voc1VqOVg3V0NzYjFNRS9vMHNLVEZtRWtnWGtwMUZHcldRCm9SS3VyWFBIZkZaczVUUkVWQ1FlWHFmRVV5Y2VaTUp6V04ycmRUZ1FkcHNENUZ0RVd4NEkwMjM0YWVpdUlJeWwKdHpvQWp5WFlWSS8xVTE0U0pZNElxaDlTTGI1cUNMZC9LamZqWDFkdnhheU5NaWFBejFhRXN4MzZBajVha1BXTgoyVW5PTDYwalNpRHc5VEpkdkZYb2l3Nnk0bG13SjcxbmNnblNZUG5kSUFUQjZ0VTJwRVo2b3puVzdtK05PVFZEClVmWDMwZURTNW1YamxJYktDdk02VnhTNUFnTUJBQUdqZ2dKZE1JSUNXVEFPQmdOVkhROEJBZjhFQkFNQ0JhQXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRApWUjBPQkJZRUZJNmxHVklEM21RWEsxdzR0TkdOQ0RPbC9qZnJNQjhHQTFVZEl3UVlNQmFBRkJRdXN4ZTNXRmJMCnJsQUpRT1lmcjUyTEZNTEdNRlVHQ0NzR0FRVUZCd0VCQkVrd1J6QWhCZ2dyQmdFRkJRY3dBWVlWYUhSMGNEb3YKTDNJekxtOHViR1Z1WTNJdWIzSm5NQ0lHQ0NzR0FRVUZCekFDaGhab2RIUndPaTh2Y2pNdWFTNXNaVzVqY2k1dgpjbWN2TUNzR0ExVWRFUVFrTUNLQ0VDb3VZV2x6Y0hKcGJtY3VZMnh2ZFdTQ0RtRnBjM0J5YVc1bkxtTnNiM1ZrCk1Fd0dBMVVkSUFSRk1FTXdDQVlHWjRFTUFRSUJNRGNHQ3lzR0FRUUJndDhUQVFFQk1DZ3dKZ1lJS3dZQkJRVUgKQWdFV0dtaDBkSEE2THk5amNITXViR1YwYzJWdVkzSjVjSFF1YjNKbk1JSUJCZ1lLS3dZQkJBSFdlUUlFQWdTQgo5d1NCOUFEeUFIY0FSSlJsTHJEdXpxL0VRQWZZcVA0b3dOcm1ncjdZeXpHMVA5TXpsclcyZ2FnQUFBRjVBNDZJClh3QUFCQU1BU0RCR0FpRUEycHZjMXBsTytaUFVFc1UvT05UbWlCcU5qVjdqMUpJR2ZQcVJYbmEwR2ZFQ0lRQ1IKNmY5NWFMNFh4bURCS3hnb1E0amNMVTNtbVhnZ05CMmhyQXdyNi8zQWpBQjNBUFpjbEMvUmR6QWlGRlFZQ0RDVQpWbzdqVFJNWk03L2ZEQzhnQzh4TzhXVGpBQUFCZVFPT2lFNEFBQVFEQUVnd1JnSWhBS2IvcUdNeHpxdHJ1YkEvClExNExlVHNuSkZPRkVIdExjc0M1WVJSdEVWKzlBaUVBbUhUUnZpTUxCb3pjVTJNanM4UFFyZjdMeklOUDFrQTIKRzYyVVUvU2ZNQ1F3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUljTHZ0NjRNUW5JZlNSUmtFbWZtcy8rZ3RDMQp2eFloaUFMMTRqWFd6aG1nTksreHBpWEt6ZGtZL0tqbFQ5dVg4alZDaVFrNnZHc0paazJuZHVZQXJVU2k0MGtiCmVqSjBKTm0zbDBpUG1qNUx5M3BzbWtrcm5sbHlTLzVFTVA4clY1MDdQWS9lcGhXQzVZQ3JlV1J3WURWdjZPWDYKZjNjTGxQV1cyWnFUNGlQN3JrQmJYSWJBdXlaMXl0eXhLTy9RRDRacDMyMEYwb2Q4YWVkTzMwdzUyb3IwNHFwTgppTWRxcm43eWZ2MUtPa1hIVnVFRW1MMkRqUWF3cHhyYXVqcHBPWDI2OWhGTnFBckFCSkJMZ2VnVmo3VzRSVlV1Ci94VmJaS0E2STYwdU5VMFZuc1VLT3E3d1BYREk4STNuZTFYV1RRSmJjc0MwVmJWeklqUE9FOFlkSjRNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
type: Opaque

---
apiVersion: v1
kind: Secret
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard-csrf
  namespace: kubernetes-dashboard
type: Opaque
data:
  csrf: ""

---
apiVersion: v1
kind: Secret
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard-key-holder
  namespace: kubernetes-dashboard
type: Opaque

---
kind: ConfigMap
apiVersion: v1
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard-settings
  namespace: kubernetes-dashboard

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
rules:
  # Allow Dashboard to get, update and delete Dashboard exclusive secrets.
  - apiGroups: [ "" ]
    resources: [ "secrets" ]
    resourceNames:
      [
          "kubernetes-dashboard-key-holder",
          "kubernetes-dashboard-certs",
          "kubernetes-dashboard-csrf",
      ]
    verbs: [ "get", "update", "delete" ]
    # Allow Dashboard to get and update 'kubernetes-dashboard-settings' config map.
  - apiGroups: [ "" ]
    resources: [ "configmaps" ]
    resourceNames: [ "kubernetes-dashboard-settings" ]
    verbs: [ "get", "update" ]
    # Allow Dashboard to get metrics.
  - apiGroups: [ "" ]
    resources: [ "services" ]
    resourceNames: [ "heapster", "dashboard-metrics-scraper" ]
    verbs: [ "proxy" ]
  - apiGroups: [ "" ]
    resources: [ "services/proxy" ]
    resourceNames:
      [
          "heapster",
          "http:heapster:",
          "https:heapster:",
          "dashboard-metrics-scraper",
          "http:dashboard-metrics-scraper",
      ]
    verbs: [ "get" ]

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
rules:
  # Allow Metrics Scraper to get metrics from the Metrics server
  - apiGroups: [ "metrics.k8s.io" ]
    resources: [ "pods", "nodes" ]
    verbs: [ "get", "list", "watch" ]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubernetes-dashboard
subjects:
  - kind: ServiceAccount
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubernetes-dashboard
subjects:
  - kind: ServiceAccount
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard

---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: kubernetes-dashboard
  template:
    metadata:
      labels:
        k8s-app: kubernetes-dashboard
    spec:
      containers:
        - name: kubernetes-dashboard
          image: kubernetesui/dashboard:v2.0.3
          imagePullPolicy: Always
          ports:
            - containerPort: 8443
              protocol: TCP
          args:
            - --auto-generate-certificates
            - --namespace=kubernetes-dashboard
            # Uncomment the following line to manually specify Kubernetes API server Host
            # If not specified, Dashboard will attempt to auto discover the API server and connect
            # to it. Uncomment only if the default does not work.
            # - --apiserver-host=http://my-address:port
          volumeMounts:
            - name: kubernetes-dashboard-certs
              mountPath: /certs
              # Create on-disk volume to store exec logs
            - mountPath: /tmp
              name: tmp-volume
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /
              port: 8443
            initialDelaySeconds: 30
            timeoutSeconds: 30
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1001
            runAsGroup: 2001
      volumes:
        - name: kubernetes-dashboard-certs
          secret:
            secretName: kubernetes-dashboard-certs
        - name: tmp-volume
          emptyDir: { }
      serviceAccountName: kubernetes-dashboard
      nodeSelector:
        "kubernetes.io/os": linux
      # Comment the following tolerations if Dashboard must not be deployed on master
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule

---
kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: dashboard-metrics-scraper
  name: dashboard-metrics-scraper
  namespace: kubernetes-dashboard
spec:
  ports:
    - port: 8000
      targetPort: 8000
  selector:
    k8s-app: dashboard-metrics-scraper

---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: dashboard-metrics-scraper
  name: dashboard-metrics-scraper
  namespace: kubernetes-dashboard
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: dashboard-metrics-scraper
  template:
    metadata:
      labels:
        k8s-app: dashboard-metrics-scraper
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: "runtime/default"
    spec:
      containers:
        - name: dashboard-metrics-scraper
          image: kubernetesui/metrics-scraper:v1.0.4
          ports:
            - containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 8000
            initialDelaySeconds: 30
            timeoutSeconds: 30
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1001
            runAsGroup: 2001
      serviceAccountName: kubernetes-dashboard
      nodeSelector:
        "kubernetes.io/os": linux
      # Comment the following tolerations if Dashboard must not be deployed on master
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      volumes:
        - name: tmp-volume
          emptyDir: { }
